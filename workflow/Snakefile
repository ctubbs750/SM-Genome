from snakemake.utils import min_version

min_version("7.32.4")


configfile: "config/config.yaml"


# Parameters
BUILDS = config["GENOME"]["BUILDS"]
FILTER = config["GENOME"]["FILTER"]
OUTDIR = config["GENOME"]["OUTDIR"]
PROVIDER = config["GENOME"]["PROVIDER"]


rule all:
    input:
        expand("resources/data/genome/{ASSEMBLY}/{ASSEMBLY}.fa.gz", ASSEMBLY=BUILDS),
        expand(
            "resources/data/genome/{ASSEMBLY}/{ASSEMBLY}.blacklist.bed",
            ASSEMBLY=BUILDS,
        ),
        expand("resources/data/genome/{ASSEMBLY}/{ASSEMBLY}.gaps.bed", ASSEMBLY=BUILDS),
    default_target: True

rule install_genome:
    message:
        """
        Installs target genome(s) under install dir
        - Regex to filter down to main chromosomes
        - Default provider set to UCSC
        """
    output:
        "resources/data/genome/{ASSEMBLY}/{ASSEMBLY}.fa.gz",
    params:
        provider=PROVIDER,
        regex=FILTER,
        outdir=OUTDIR,
    conda:
        "envs/genome.yaml"
    threads: 16
    log:
        stdout="workflow/logs/install_genome-{ASSEMBLY}.stdout",
        stderr="workflow/logs/install_genome-{ASSEMBLY}.stderr",
    cache: 
        True 
    shell:
        """
        genomepy plugin disable  blacklist &&
        genomepy install {wildcards.ASSEMBLY} \
        --provider {params.provider} \
        --genomes_dir {params.outdir} \
        --bgzip \
        --threads {threads} \
        --regex {params.regex}
        """

rule confirm_gaps:
    message:
        """
        Checks for installation of gaps. Weird rule, workaround.
        """
    input:
        rules.install_genome.output,
    output:
        "resources/data/genome/{ASSEMBLY}/{ASSEMBLY}.gaps.bed"
    conda:
        "envs/genome.yaml"
    threads: 16
    log:
        stdout="workflow/logs/confirm_gaps-{ASSEMBLY}.stdout",
        stderr="workflow/logs/confirm_gaps-{ASSEMBLY}.stderr",
    cache: 
        True 
    shell:
        """
        if [ -f {output} ]; then exit; fi
        """

rule install_blacklist:
    message:
        """
        Installs ENCODE blacklist.
        """
    output:
        "resources/data/genome/{ASSEMBLY}/{ASSEMBLY}.blacklist.bed",
    params:
        hg19_url=config["GENOME"]["BLACKLIST_HG19"],
        hg38_url=config["GENOME"]["BLACKLIST_HG38"],
        compress="resources/data/genome/{ASSEMBLY}/{ASSEMBLY}.blacklist.bed.gz"
    threads: 1
    log:
        stdout="workflow/logs/install_blacklist-{ASSEMBLY}.stdout",
        stderr="workflow/logs/install_blacklist-{ASSEMBLY}.stderr",
    cache: 
        True
    shell:
        """
        if [ {wildcards.ASSEMBLY} == "hg19" ]; then
            wget {params.hg19_url} -O {params.compress} && gunzip {params.compress}
        else
            wget {params.hg38_url} -O {params.compress} && gunzip {params.compress}
        fi
        """
