from snakemake.utils import min_version


# Configuration
configfile: "config/config.yaml"


# Parameters
BUILDS = config["GENOME"]["BUILDS"]
FILTER = config["GENOME"]["FILTER"]
SOURCE = config["GENOME"]["SOURCE"]
BLACKLIST_HG19_URL = config["GENOME"]["BLACKLIST_HG19"]
BLACKLIST_HG38_URL = config["GENOME"]["BLACKLIST_HG38"]

# Settings
min_version("7.32.4")


rule all:
    input:
        expand("resources/data/genome/{BUILD}/{BUILD}.fa.gz", BUILD=BUILDS),
        expand("resources/data/genome/{BUILD}/{BUILD}.gaps.bed", BUILD=BUILDS),
        expand("resources/data/genome/{BUILD}/{BUILD}.blacklist.bed", BUILD=BUILDS),
    default_target: True


rule install_genome:
    message:
        """
        Installs target genome(s) under install dir
        - Regex to filter down to main chromosomes
        - Default provider set to UCSC
        """
    output:
        "resources/data/genome/{BUILD}/{BUILD}.fa.gz",
    params:
        regex=FILTER,
        source=SOURCE,
        outdir=lambda op, output: os.path.dirname(os.path.dirname(output[0])),
    conda:
        "envs/genome.yaml"
    threads: 24
    log:
        stdout="workflow/logs/install_genome-{BUILD}.stdout",
        stderr="workflow/logs/install_genome-{BUILD}.stderr",
    cache: True
    shell:
        """
        genomepy plugin disable blacklist &&
        genomepy install {wildcards.BUILD} \
        --provider {params.source} \
        --genomes_dir {params.outdir} \
        --bgzip \
        --threads {threads} \
        --regex {params.regex}
        """


rule confirm_gaps:
    message:
        """
        Checks for installation of gaps. Weird rule, workaround.
        """
    input:
        rules.install_genome.output,
    output:
        "resources/data/genome/{BUILD}/{BUILD}.gaps.bed",
    conda:
        "envs/genome.yaml"
    threads: 1
    log:
        stdout="workflow/logs/confirm_gaps-{BUILD}.stdout",
        stderr="workflow/logs/confirm_gaps-{BUILD}.stderr",
    cache: True
    shell:
        """
        if [ -f {output} ]; then exit; fi
        """


rule install_blacklist:
    message:
        """
        Installs ENCODE blacklist.
        """
    output:
        "resources/data/genome/{BUILD}/{BUILD}.blacklist.bed.gz",
    params:
        hg19_url=BLACKLIST_HG19_URL,
        hg38_url=BLACKLIST_HG38_URL,
    conda:
        "envs/genome.yaml"
    threads: 1
    log:
        stdout="workflow/logs/install_blacklist-{BUILD}.stdout",
        stderr="workflow/logs/install_blacklist-{BUILD}.stderr",
    shell:
        """
        if [ {wildcards.BUILD} == "hg19" ]; then
            wget {params.hg19_url} -O {output} 
        else
            wget {params.hg38_url} -O {output}
        fi
        """


rule decompress_blacklist:
    message:
        """
        Decompresses ENCODE blacklist BED.
        """
    input:
        rules.install_blacklist.output,
    output:
        "resources/data/genome/{BUILD}/{BUILD}.blacklist.bed",
    conda:
        "envs/genome.yaml"
    threads: 1
    log:
        stdout="workflow/logs/decompress_blacklist-{BUILD}.stdout",
        stderr="workflow/logs/decompress_blacklist-{BUILD}.stderr",
    shell:
        """
        gunzip {input}
        """
